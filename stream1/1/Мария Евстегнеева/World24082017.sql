-- MySQL Script generated by MySQL Workbench
-- Thu Aug 24 13:38:17 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `World` ;

-- -----------------------------------------------------
-- Schema World
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `World` ;

USE `World` ;

-- -----------------------------------------------------
-- Table `World`.`Region`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `World`.`Region` ;

CREATE TABLE IF NOT EXISTS `Region` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CountryId` INT NOT NULL COMMENT '\nA foreign key identifying the country from the \"country\" table',
  `Name` VARCHAR(100) NOT NULL,
  `TextCode` VARCHAR(20) NOT NULL,
  `NumCode` INT NOT NULL,
  `AdmCenter` INT NOT NULL COMMENT '\nAdministrative center (A foreign key identifying the city from the \"city\" table)',
  `Population` INT NOT NULL,
  `DateUpdate` DATETIME NULL DEFAULT NULL,
  `IsDeleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC),
  UNIQUE INDEX `TextCode_UNIQUE` (`TextCode` ASC),
  UNIQUE INDEX `NumCode_UNIQUE` (`NumCode` ASC),
  INDEX `fk_country_idx` (`CountryID` ASC),
  INDEX `fk_adm_center_idx` (`AdmCenter` ASC),
  CONSTRAINT `fk_country`
    FOREIGN KEY (`CountryID`)
    REFERENCES `World`.`Country` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_adm_center`
    FOREIGN KEY (`AdmCenter`)
    REFERENCES `World`.`City` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `World`.`Area`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `World`.`Area` ;

CREATE TABLE IF NOT EXISTS `World`.`Area` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CoutryID` INT NOT NULL COMMENT '\nA foreign key identifying the country from the \"country\" table',
  `RegionID` INT NOT NULL COMMENT '\nA foreign key identifying the region from the \"region\" table',
  `Name` VARCHAR(100) NOT NULL,
  `AdmCenter` INT NOT NULL COMMENT 'Administration center (A foreign key identifying the city  from the \"city\" table)',
  `Population` INT NOT NULL,
  `DateUpdate` DATETIME NULL DEFAULT NULL,
  `IsDleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC),
  INDEX `fk_country_idx` (`CoutryID` ASC),
  INDEX `fa_region_idx` (`RegionID` ASC),
  INDEX `fk_adm_center_idx` (`AdmCenter` ASC),
  CONSTRAINT `fk_country1`
    FOREIGN KEY (`CoutryID`)
    REFERENCES `World`.`Country` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_region`
    FOREIGN KEY (`RegionID`)
    REFERENCES `World`.`Region` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_adm_center1`
    FOREIGN KEY (`AdmCenter`)
    REFERENCES `World`.`City` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `World`.`City`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `World`.`City` ;

CREATE TABLE IF NOT EXISTS `World`.`City` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CoutryID` INT NOT NULL COMMENT 'A foreign key identifying the country from the \"country\" table',
  `RegionID` INT NOT NULL COMMENT 'A foreign key identifying the region from the \"region\" table',
  `AreaID` INT NOT NULL COMMENT 'A foreign key identifying the area from the \"area\" table',
  `Name` VARCHAR(50) NOT NULL,
  `Population` INT NOT NULL,
  `DateUpdate` DATETIME NULL DEFAULT NULL,
  `IsDeleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC),
  INDEX `fk_country_idx` (`CoutryID` ASC),
  INDEX `fk_region_idx` (`RegionID` ASC),
  INDEX `fk_area_idx` (`AreaID` ASC),
  CONSTRAINT `fk_country2`
    FOREIGN KEY (`CoutryID`)
    REFERENCES `World`.`Country` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_region1`
    FOREIGN KEY (`RegionID`)
    REFERENCES `World`.`Region` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_area`
    FOREIGN KEY (`AreaID`)
    REFERENCES `World`.`Area` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `World`.`Country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `World`.`Country` ;

CREATE TABLE IF NOT EXISTS `Country` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(50) NOT NULL COMMENT '\nInternational name',
  `NumCode` TINYINT NOT NULL COMMENT 'ISO 3166-1 code (num)',
  `TextCode` VARCHAR(3) NOT NULL,
  `Founded` YEAR NOT NULL COMMENT '\nYear of foundation of the country',
  `CapitalCity` INT NOT NULL COMMENT 'The foreign key identifying the capital from the \"city\" table',
  `Language` VARCHAR(50) NOT NULL,
  `Population` INT NULL,
  `DateUpdate` DATETIME NULL DEFAULT NULL,
  `IsDeleted` TINYINT(1) UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC),
  UNIQUE INDEX `NumCode_UNIQUE` (`NumCode` ASC),
  UNIQUE INDEX `TextCode_UNIQUE` (`TextCode` ASC),
  INDEX `fk_capital_idx` (`CapitalCity` ASC))
ENGINE = InnoDB;

 ALTER TABLE Country ADD COLUMN president VARCHAR(50) NOT NULL AFTER Language;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
