-- MySQL Script generated by MySQL Workbench
-- Thu Aug 24 03:56:47 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Geography
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Geography` ;

-- -----------------------------------------------------
-- Schema Geography
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Geography` DEFAULT CHARACTER SET utf8 ;
USE `Geography` ;

-- -----------------------------------------------------
-- Table `Geography`.`Punkt_Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Geography`.`Punkt_Type` ;

CREATE TABLE IF NOT EXISTS `Geography`.`Punkt_Type` (
  `id` INT UNSIGNED ZEROFILL NOT NULL,
  `name` VARCHAR(50) NOT NULL COMMENT 'Хранит наименование типа населенного пункта.\nНапример, Город, Деревня и т.п.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Geography`.`Strana`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Geography`.`Strana` ;

CREATE TABLE IF NOT EXISTS `Geography`.`Strana` (
  `id` INT UNSIGNED ZEROFILL NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Geography`.`Subject_Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Geography`.`Subject_Type` ;

CREATE TABLE IF NOT EXISTS `Geography`.`Subject_Type` (
  `id` INT UNSIGNED ZEROFILL NOT NULL,
  `name` VARCHAR(50) NOT NULL COMMENT 'Содержит наименование типа субъекта.\nНапример, Область, Край, Штат и т.п.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Geography`.`Subject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Geography`.`Subject` ;

CREATE TABLE IF NOT EXISTS `Geography`.`Subject` (
  `id` INT UNSIGNED ZEROFILL NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `strana` INT UNSIGNED NOT NULL,
  `type` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_idx` (`strana` ASC),
  INDEX `id_idx1` (`type` ASC),
  CONSTRAINT `id`
    FOREIGN KEY (`strana`)
    REFERENCES `Geography`.`Strana` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id`
    FOREIGN KEY (`type`)
    REFERENCES `Geography`.`Subject_Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Geography`.`Punkt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Geography`.`Punkt` ;

CREATE TABLE IF NOT EXISTS `Geography`.`Punkt` (
  `id` INT UNSIGNED ZEROFILL NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `type` INT UNSIGNED NOT NULL,
  `subject` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_idx` (`type` ASC),
  INDEX `id_idx1` (`subject` ASC),
  CONSTRAINT `id`
    FOREIGN KEY (`type`)
    REFERENCES `Geography`.`Punkt_Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id`
    FOREIGN KEY (`subject`)
    REFERENCES `Geography`.`Subject` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Geography`.`Adres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Geography`.`Adres` ;

CREATE TABLE IF NOT EXISTS `Geography`.`Adres` (
  `id` INT UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  `Punkt` INT UNSIGNED NOT NULL,
  `Central_Punkt` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `id_idx` (`Punkt` ASC),
  INDEX `id_idx1` (`Central_Punkt` ASC),
  CONSTRAINT `id`
    FOREIGN KEY (`Punkt`)
    REFERENCES `Geography`.`Punkt` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id`
    FOREIGN KEY (`Central_Punkt`)
    REFERENCES `Geography`.`Punkt` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
